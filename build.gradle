buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.2"
    }
}

repositories {
    jcenter()
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.13'
}

group = 'com.github.missedone'
version = '1.0.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'com.jfrog.bintray'

targetCompatibility = "1.7"
sourceCompatibility = "1.7"

jar {
	// include license into jar
	into 'META-INF', {
		from 'LICENSE'
	}
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.2'
    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
        exclude(module: 'groovy')
    }
    // override the httpclient version to be consistent with 'gradle-download-task'
    runtime 'org.apache.httpcomponents:httpclient:4.5.2'
}


// package source into a jar file
task packageSources(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

// define artifacts for upload
artifacts {
	archives jar
	archives packageSources
}

bintray { // task bintrayUpload
	user = project.hasProperty('BINTRAY_USER') ? project.getProperty('BINTRAY_USER') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('BINTRAY_API_KEY') ? project.getProperty('BINTRAY_API_KEY') : System.getenv('BINTRAY_API_KEY')

	configurations = ['archives']

	dryRun = false
	publish = !project.version.endsWith('-SNAPSHOT')
	pkg {
		def githubUrl = 'https://github.com/missedone/gradle-bintray-p2-plugin'
		repo = 'gradle-plugins'
		name = 'gradle-bintray-p2-plugin'
		desc = 'The Gradle plugin to publish P2 repo to bintray.com'
		websiteUrl = githubUrl
		issueTrackerUrl = "$githubUrl/issues"
		vcsUrl = "${githubUrl}.git"
		licenses = ['Apache-2.0']
		labels = ['gradle', 'p2', 'eclipse']
		publicDownloadNumbers = true
		// version descriptor
		version {
			name = project.version
			attributes = ['gradle-plugin': "com.github.missedone:${project.group}:gradle-bintray-p2-plugin"]
		}
	}
}
